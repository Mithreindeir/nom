#Bubble Sort

var bubble_sort = function(arr, comp):
	var arr_size = size(arr)
	for var j=0, j < arr_size, j++:
		for var i = 0, i < (arr_size-1), i++:
			if not comp(arr[i], arr[i+1]):
				var tmp = arr[i+1]
				arr[i+1]=arr[i]
				arr[i]=tmp
			end
		end
	end
end

var merge_sort = function(arr, comp):
	var s=size(arr)
	if s>1:
		var mid = floor(s/2)
		var a=[]
		for var i=0, i < mid, i++:
			a[i]=arr[i]
		end
		var b=[]
		for var i=mid, i < s, i++:
			b[i-mid]=arr[i]
		end
		merge_sort(a, comp)
		merge_sort(b, comp)
		var i=0
		var j=0
		var k=0
		var ls = size(a)
		var rs = size(b)
		while (i<ls) and (j<rs):
			if comp(a[i], b[j]):
				arr[k]=a[i]
				i++
			end
			else:
				arr[k]=b[j]
				j++
			end
			k++
		end
		while i < ls:
			arr[k]=a[i]
			i++
			k++
		end
		while j < rs:
			arr[k]=b[j]
			j++
			k++
		end
	end
end

var fh=open("test.txt", "r")
var str=read(fh)

#Returns a substring given a start and end
var range = function(str1, low, high):
	var expr = string()
	var s = high-low
	var expr = reserve(expr, s)
	for var i=low, i<high, i++:
		expr[i-low] = str1[i]
	end
	return expr
end

#Alphabetical comparison function
var alphabetical = function(str1, str2):
	var low1 = size(str1)
	var low2 = size(str2)
	var low = low2
	if low1 < low2:
		low=low1
	end
	for var i=0,i<low,i++:
		if str1[i] < str2[i]:
			return 1
		end
		elseif str1[i] > str2[i]:
			return 0
		end
	end
	return 0
end

var a=[]
var c=0
var idx=0
#Separates Words by Spaces
for var i=0, i<size(str), i++:
	var idx=i
	while str[i] != " " and i < size(str) and str[i] != "\n":
		i++
	end
	a[c]=range(str, idx, i)
	c++
end
print("Wordlist: ", a, "\n")

var copy = function(a):
	var b = []
	var s = size(a)
	for var i=0, i < s, i++:
		b[i]=a[i]
	end
	return b
end
var b=copy(a)
print("\nSorting alphabetically...\n")
var bt = clock()
merge_sort(a, alphabetical)
var t = clock() - bt
print(a)
print("\nMerge sorted in ", t, " seconds\n\n")
bt = clock()
bubble_sort(b, alphabetical)
t = clock() - bt
print(b)
print("\nBubble sorted in ", t, " seconds\n")

close(fh)